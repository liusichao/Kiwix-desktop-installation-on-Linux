这是一个命令行工具的帮助文档，展示了如何使用该工具与大型语言模型（如GPT-4o）交互。以下是关键部分的总结和解释：

---

### **核心功能**
1. **基础参数**  
   - `prompt [PROMPT]`：必填，输入要生成文本的提示词。
   - `--model TEXT`：指定模型（默认：`gpt-4o`）。
   - `--temperature FLOAT`：控制生成随机性（0.0=确定，2.0=随机，默认：0.0）。
   - `--top-p FLOAT`：限制高概率词（0.0=严格，1.0=宽松，默认：1.0）。

2. **输出格式**  
   - `--md`/`--no-md`：美化Markdown输出（默认启用）。
   - `--editor`：通过编辑器输入提示（默认禁用）。

---

### **高级功能**
1. **Shell交互**  
   - `--shell`/`-s`：生成并执行Shell命令。
   - `--describe-shell`/`-d`：解释Shell命令。
   - `--interaction`：启用交互模式（默认启用）。

2. **代码生成**  
   - `--code`/`-c`：仅生成代码（不解释）。
   - `--functions`：允许函数调用（默认启用）。

3. **聊天会话**  
   - `--chat TEXT`：继续指定ID的对话（`temp`为临时会话）。
   - `--repl TEXT`：启动交互式会话（REPL模式）。
   - `--show-chat TEXT`：查看指定ID的对话历史。
   - `--list-chats`/`-lc`：列出所有会话ID。

---

### **角色管理**
- `--role TEXT`：设置系统角色（如“你是一个Python专家”）。
- `--create-role TEXT`：创建新角色。
- `--show-role TEXT`：查看角色详情。
- `--list-roles`/`-lr`：列出所有角色。

---

### **其他选项**
- `--cache`：启用结果缓存（默认启用）。
- `--version`：显示版本。
- `--help`：显示帮助。

---

### **使用示例**
1. **生成文本**  
   ```bash
   ./tool.sh "解释量子计算" --model gpt-4o --temperature 0.7
   ```

2. **生成并执行Shell命令**  
   ```bash
   ./tool.sh "列出当前目录文件" --shell --interaction
   ```

3. **继续对话**  
   ```bash
   ./tool.sh "你好" --chat session123
   ```

4. **创建角色**  
   ```bash
   ./tool.sh --create-role "技术文档助手"
   ```

---

### **注意事项**
- 默认模型为`gpt-4o`，但需确保已配置API密钥或本地模型。
- `--shell`和`--code`需谨慎使用，避免执行恶意命令。
- 交互模式（`--interaction`）适合复杂任务，如逐步调试代码。

如果需要更具体的场景示例或功能解释，可以进一步说明！
